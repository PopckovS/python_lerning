'''Try…Except / Уроки по Python для начинающих'''

'''Блок try позволяет проверить блок кода на ошибки.
Блок except обрабатывает ошибку.
Блок finally позволяет выполнять код, независимо от результата блоков try и except.'''

start_block = "======================================================"

'''Эти исключения можно обрабатывать с помощью оператора try:
Блок try генерирует исключение, потому что x не объявлен.'''
print(start_block)
try:
    print(x)
except:
    print("Ошибка")
# Answer:Ошибка


'''Вы можете определить столько исключений, сколько хотите. Они будут срабатывать последовательно.'''
print(start_block)
try:
    print(x)
except NameError:
    print("Переменная x не существует")
except:
    print("Что-то пошло не так")
# Answer:Переменная x не существует


'''Вы можете использовать ключевое слово else, для определения блока кода, который должен быть выполнен, если ошибок не было.'''
print(start_block)
try:
    print("Привет")
except:
    print("Что-то пошло не так")
else:
    print("Ошибок не обнаружено")
# Answer:Ошибок не обнаружено


'''Блок finally, если указан, будет выполняться независимо от того, возникает ошибка в блоке try или нет.'''
print(start_block)
try:
    print(x)
except:
    print("Что-то пошло не так")
finally:
    print("Блок 'try except' завершен")
# Answer: Что-то пошло не так
# Answer: Блок 'try except' завершен


'''Это может быть полезно для закрытия файлов и очистки ресурсов.
Попробуем открыть и записать в файл, который не доступен для записи:'''
print(start_block)
try:
    f = open("demofile.txt") # фал должен быть создан, иначе исключение FileNotFound
    f.write("Lorum Ipsum")
except:
    print("Что-то пошло не так при записи в файл")
finally:
    f.close()
# Answer: Что-то пошло не так при записи в файл



'''Ключевое слово raise'''
print(start_block)
# raise ZeroDivisionError
if '1' == 1:
    print('soft')

if '1' != 1:
    print('hard')
# Answer: